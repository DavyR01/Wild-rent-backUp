version: "3.8"
services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
    develop:
      watch:
        - path: ./backend/package.json
          target: /app
          action: rebuild
        - path: ./backend/pnpm-lock.yaml
          target: /app
          action: rebuild
        - path: ./backend
          target: /app
          action: sync
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      retries: 10
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 4000:4000

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file: .env.test
    environment:
      NODE_ENV: development
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:3000/api/healthcheck'' || exit 1'
        
        
      retries: 10
    develop:
      watch:
        - path: ./frontend/package.json
          target: /app
          action: rebuild
        - path: ./frontend/pnpm-lock.yaml
          target: /app
          action: rebuild
        - path: ./frontend/next.config.js
          target: /app
          action: rebuild
        - path: ./frontend
          target: /app
          action: sync
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 3000:3000

  e2e:
    build:
      context: ./e2e
      dockerfile: Dockerfile
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      frontend:
        condition: service_healthy

  imagesupload:
    build:
      context: ./imagesupload
      dockerfile: Dockerfile.dev
    develop:
      watch:
        - path: ./imagesupload/package.json
          target: /app
          action: rebuild
        - path: ./imagesupload/pnpm-lock.yaml
          target: /app
          action: rebuild
        - path: ./imagesupload/src
          target: /app/src
          action: sync
    volumes:
      - ./imagesupload/uploads:/app/uploads
    ports:
      - 8000:8000

  adminer:
    image: adminer
    ports:
      - 8080:8080

  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_PASSWORD: wildrent
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data


volumes:
  pgdata:
