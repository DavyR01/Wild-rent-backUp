name: playwright-and-docker-ci

on: push

jobs:
  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: ‚öôÔ∏è Check out code
        uses: actions/checkout@v2
      # - name: Set environment variables for tests
      #   run: |
      #     if [ "${GITHUB_REF}" == "refs/heads/dev" ]; then
      #       echo "IMAGE_TAG=dev" >> $GITHUB_ENV
      #     elif [ "${GITHUB_REF}" == "refs/heads/staging" ]; then
      #       echo "IMAGE_TAG=staging" >> $GITHUB_ENV
      #     elif [ "${GITHUB_REF}" == "refs/heads/main" ]; then
      #       echo "IMAGE_TAG=main" >> $GITHUB_ENV
      #     fi
      - name: ‚öôÔ∏è Run test e2e
        run: docker compose -f docker-compose.e2e.yml up --build --exit-code-from e2e
      #   env:
      #      IMAGE_TAG: ${{ env.IMAGE_TAG } }
#   front-test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: ‚öôÔ∏è Check out code
#         uses: actions/checkout@v2
#       - name: ‚öôÔ∏è Run interface front test
#         run: cd frontend && pnpm run test
  docker:
    needs: test-e2e
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/stagingtest' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
            if [ "${GITHUB_REF}" == "refs/heads/dev" ]; then
               echo "IMAGE_TAG=dev" >> $GITHUB_ENV
            elif [ "${GITHUB_REF}" == "refs/heads/stagingtest" ]; then
               echo "IMAGE_TAG=stagingtest" >> $GITHUB_ENV
            elif [ "${GITHUB_REF}" == "refs/heads/main" ]; then
               echo "IMAGE_TAG=main" >> $GITHUB_ENV
            fi
      - name: üîß Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: üê≥ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: üñ• Build and push frontend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:frontend"
          file: "Dockerfile.prod"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wildrent-front:${{ env.IMAGE_TAG }}
        env:
          IMAGE_TAG: ${{env.IMAGE_TAG}}
      - name: üóÇ Build and push backend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:backend"
          file: "Dockerfile.prod"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wildrent-back:${{ env.IMAGE_TAG }}
        env:
          IMAGE_TAG: ${{env.IMAGE_TAG}}