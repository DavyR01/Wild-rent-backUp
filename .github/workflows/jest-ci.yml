name: playwright-and-docker-ci

on: push

jobs:
  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: ⚙️ Check out code
        uses: actions/checkout@v2
      - name: ⚙️ Run test e2e
        run: docker compose -f docker-compose.e2e.yml up --build --exit-code-from e2e
#   front-test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: ⚙️ Check out code
#         uses: actions/checkout@v2
#       - name: ⚙️ Run interface front test
#         run: cd frontend && pnpm run test
  docker:
    needs: test-e2e
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🐳 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: 🖥 Build and push frontend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:frontend"
          file: "Dockerfile.prod"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_CLIENT_FRONTEND }}:latest
      - name: 🗂 Build and push backend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:backend"
          file: "Dockerfile.prod"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_SERVER_BACKEND }}:latest
      - name: 📤 Build and push imagesupload
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:imagesupload"
          file: "Dockerfile.prod"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_SERVER_IMAGES }}:latest

